<html>
<head>
    <link rel="stylesheet" href="navbar.css">
    <link rel="stylesheet" href="LR_page.css">
</head>

<body>
    <div class="homepage-container">
        <div class="login-container">
            <div class="login-input-container">
                <h1>Already registered?</h1>
                <form action="/login" method="POST">
                    <input type="email" class="username" name="email" placeholder="Email" required><br>
                    <input type="password" class="password" name="password" placeholder="Password" required>
                    <button type="submit" class="userlogon">Login</button>
                </form>
                {{#if errors.password_mismatch}}
                    <b class="password-error">Passwords do not match.</b>
                {{/if}}
                {{#if errors.authentication_failed}}
                    <b class="credentials-error">Invalid username and/or password.</b>
                {{/if}}
                {{#if errors.registration_error}}
                    <b class="credentials-error">Registration failed. Please check your information.</b>
                {{/if}}
                {{#if errors.password_validation}}
                    <b class="credentials-error">Password validation failed: {{errors.password_validation_details}}</b>
                {{/if}}
                {{#if errors.invalid_data}}
                    <b class="credentials-error">Invalid data provided. Please check your input.</b>
                {{/if}}
            </div>
        </div>

        <div class="register-container">
            <div class="register-header">New User? Join the talks...</div>
            <div class="register-input-container">
                <form action="/login" method="POST" id="registerForm">
                    <input type="text" class="registerinput" name="registerFirstName" placeholder="First Name" required><br>
                    <input type="text" class="registerinput" name="registerLastName" placeholder="Last Name" required><br>
                    <input type="email" class="registerinput" name="registerEmail" placeholder="Email" required><br>
                    <input type="password" class="registerinput" name="registerPassword" placeholder="Password" required id="passwordField"><br>
                    
                    <!-- Password Requirements Display -->
                    <div class="password-requirements" id="passwordRequirements">
                        <h4>Password Requirements:</h4>
                        <ul>
                            <li id="length-check">At least 12 characters long</li>
                            <li id="uppercase-check">At least one uppercase letter (A-Z)</li>
                            <li id="lowercase-check">At least one lowercase letter (a-z)</li>
                            <li id="number-check">At least one number (0-9)</li>
                            <li id="special-check">At least one special character (!@#$%^&*()_+-=[]{}|;:,.<>?)</li>
                            <li id="complexity-check">Meet at least 3 complexity criteria</li>
                            <li id="no-sequences">No sequential characters (123, abc, qwe, etc.)</li>
                            <li id="no-repeats">No more than 2 consecutive repeated characters</li>
                            <li id="no-patterns">No keyboard patterns (qwerty, asdfgh, etc.)</li>
                            <li id="no-common">Not a common password</li>
                        </ul>
                    </div>
                    
                    <input type="password" class="registerinput" name="confirmPassword" placeholder="Confirm Password" required><br>
                    
                    <select class="registerinput" name="userType" id="userType" required>
                        <option value="">Select User Type</option>
                        <option value="student">Student</option>
                        <option value="professor">Professor</option>
                        <option value="manager">Manager</option>
                    </select><br>
                    
                    <!-- Student fields -->
                    <div id="studentFields" style="display: none;">
                        <input type="text" class="registerinput" name="studentID" placeholder="Student ID"><br>
                        <select class="registerinput" name="course" required>
                            <option value="">Select a Course</option>
                            {{#each courses}}
                                <option value="{{_id}}">{{name}} ({{code}})</option>
                            {{/each}}
                        </select><br>
                    </div>
                    
                    <!-- Professor fields -->
                    <div id="professorFields" style="display: none;">
                        <input type="text" class="registerinput" name="teacherID" placeholder="Teacher ID" required><br>
                        <div class="subject-selector">
                            <label for="subjects">Subjects (optional):</label><br>
                            <div class="subjects-checklist">
                                {{#each subjects}}
                                    <label class="subject-checkbox">
                                        <input type="checkbox" name="subjects" value="{{_id}}" data-name="{{name}}">
                                        <span class="checkmark"></span>
                                        {{name}} ({{code}})
                                    </label>
                                {{/each}}
                            </div>
                        </div>
                    </div>
                </form>
                
                <div class="register-button">
                    <button type="submit" form="registerForm" class="userregister">Register</button>
                </div>
            </div>
        </div>
    </div>

    <div id="navbar">
        <a class="mainpage" href="/">Profdex</a>
        <span class="navbar-buttons">
            <a class="menu" href="/editprofile">About Me</a>
            {{#unless (eq userType 'professor')}}
            <a class="menu" href="/createpost">Create Review</a>
            {{/unless}}
            <a class="menu" href="/help">Help</a>
        </span>
        <span class="search-buttons">
            {{#if (or (eq userType 'manager') (eq userType 'administrator'))}}
            <a class="moderator-link" href="/moderator">Moderator</a>
            {{/if}}
            <a class="admin-link" href="/admin/login">Admin</a>
            <form action="/viewprof" method="post">
                <input type="text" class="search" id="search" name="search" placeholder="Professor Full Name">
                <button type="submit" id="searchbutton"></button>
            </form>
        </span>
    </div>

    <script>
        let selectedSubjects = [];

        function checkFormValidity() {
            const userType = document.getElementById('userType').value;
            const registerButton = document.querySelector('.userregister');
            let isValid = true;
            let errorMessage = '';

            const firstName = document.querySelector('input[name="registerFirstName"]').value.trim();
            const lastName = document.querySelector('input[name="registerLastName"]').value.trim();
            const email = document.querySelector('input[name="registerEmail"]').value.trim();
            const password = document.querySelector('input[name="registerPassword"]').value;
            const confirmPassword = document.querySelector('input[name="confirmPassword"]').value;

            if (!firstName || !lastName || !email || !password || !confirmPassword || !userType) {
                isValid = false;
                errorMessage = 'Please fill all required fields';
            } else if (password !== confirmPassword) {
                isValid = false;
                errorMessage = 'Passwords do not match';
            } else {
                // Check password requirements
                const passwordChecks = validatePassword(password);
                const allPasswordRequirementsMet = Object.values(passwordChecks).every(Boolean);
                
                if (!allPasswordRequirementsMet) {
                    isValid = false;
                    errorMessage = 'Password does not meet all requirements';
                }
            }
            } else if (userType === 'student') {
                const studentID = document.querySelector('input[name="studentID"]').value.trim();
                const course = document.querySelector('select[name="course"]').value;
                
                if (!studentID || !course) {
                    isValid = false;
                    errorMessage = 'Please fill student ID and select a course';
                }
            } else if (userType === 'professor') {
                const teacherID = document.querySelector('input[name="teacherID"]').value.trim();
                
                if (!teacherID) {
                    isValid = false;
                    errorMessage = 'Please fill teacher ID';
                }
            }

            if (isValid) {
                registerButton.classList.remove('disabled');
                registerButton.title = 'Click to register';
            } else {
                registerButton.classList.add('disabled');
                registerButton.title = errorMessage;
            }
            
            console.log('Form validity check:', { isValid, userType, errorMessage });

            return isValid;
        }

        function addFormValidationListeners() {
            const formFields = document.querySelectorAll('#registerForm input, #registerForm select');
            formFields.forEach(field => {
                field.addEventListener('input', checkFormValidity);
                field.addEventListener('change', checkFormValidity);
            });
            
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', checkFormValidity);
            });
        }

        document.getElementById('userType').addEventListener('change', function() {
            const userType = this.value;
            const studentFields = document.getElementById('studentFields');
            const professorFields = document.getElementById('professorFields');
            const courseSelect = document.querySelector('select[name="course"]');
            const teacherIDInput = document.querySelector('input[name="teacherID"]');

            studentFields.style.display = 'none';
            professorFields.style.display = 'none';

            if (courseSelect) courseSelect.required = false;
            if (teacherIDInput) teacherIDInput.required = false;

            if (userType === 'student') {
                studentFields.style.display = 'block';
                if (courseSelect) courseSelect.required = true;
                if (teacherIDInput) teacherIDInput.required = false;
            } else if (userType === 'professor') {
                professorFields.style.display = 'block';
                if (teacherIDInput) teacherIDInput.required = true;
            }

            setTimeout(checkFormValidity, 100);
        });



        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const userType = document.getElementById('userType').value;
            const formData = {
                firstName: document.querySelector('input[name="registerFirstName"]').value.trim(),
                lastName: document.querySelector('input[name="registerLastName"]').value.trim(),
                email: document.querySelector('input[name="registerEmail"]').value.trim(),
                password: document.querySelector('input[name="registerPassword"]').value,
                confirmPassword: document.querySelector('input[name="confirmPassword"]').value,
                userType: userType
            };
            if (userType === 'student') {
                formData.studentID = document.querySelector('input[name="studentID"]').value.trim();
                formData.course = document.querySelector('select[name="course"]').value;
            } else if (userType === 'professor') {
                formData.teacherID = document.querySelector('input[name="teacherID"]').value.trim();
                const checkedSubjects = document.querySelectorAll('input[name="subjects"]:checked');
                formData.subjects = Array.from(checkedSubjects).map(cb => ({ id: cb.value, name: cb.getAttribute('data-name') }));
            }
            console.log('Register form data:', formData);
        });

        // Password validation function
        function validatePassword(password) {
            const checks = {
                length: password.length >= 12,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /\d/.test(password),
                special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password),
                sequences: !/(123|234|345|456|789|012|abc|bcd|cde|def|efg|fgh|ghi|hij|ijk|jkl|klm|lmn|mno|nop|opq|pqr|qrs|rst|stu|tuv|uvw|vwx|wxy|xyz|qwe|wer|ert|rty|tyu|yui|uio|iop|asd|sdf|dfg|fgh|ghj|hjk|jkl|zxc|xcv|cvb|vbn|bnm)/i.test(password),
                repeats: !/(.)\1{2,}/.test(password), // No more than 2 consecutive repeated characters
                patterns: !/(qwerty|asdfgh|zxcvbn|123456|654321|qazwsx|edcrfv|tgbyhn|ujmikl|plokij)/i.test(password),
                common: !/^(password|123456|password123|admin|user|test|welcome|monkey|dragon|master|letmein|login|abc123|qwerty|football|baseball|superman|batman|trustno1|shadow|michael|jordan|harley|ranger|buster|thomas|tigger|robert|soccer|test123|guest|info|adm|mysql|user1|administrator)$/i.test(password)
            };
            
            // Calculate complexity score
            const complexityScore = [checks.uppercase, checks.lowercase, checks.number, checks.special].filter(Boolean).length;
            checks.complexity = complexityScore >= 3;
            
            return checks;
        }
        
        // Update password requirements display
        function updatePasswordRequirements(password) {
            const checks = validatePassword(password);
            
            // Update each requirement indicator
            document.getElementById('length-check').className = checks.length ? 'valid' : 'invalid';
            document.getElementById('uppercase-check').className = checks.uppercase ? 'valid' : 'invalid';
            document.getElementById('lowercase-check').className = checks.lowercase ? 'valid' : 'invalid';
            document.getElementById('number-check').className = checks.number ? 'valid' : 'invalid';
            document.getElementById('special-check').className = checks.special ? 'valid' : 'invalid';
            document.getElementById('complexity-check').className = checks.complexity ? 'valid' : 'invalid';
            document.getElementById('no-sequences').className = checks.sequences ? 'valid' : 'invalid';
            document.getElementById('no-repeats').className = checks.repeats ? 'valid' : 'invalid';
            document.getElementById('no-patterns').className = checks.patterns ? 'valid' : 'invalid';
            document.getElementById('no-common').className = checks.common ? 'valid' : 'invalid';
            
            // Check if all requirements are met
            const allValid = Object.values(checks).every(Boolean);
            return allValid;
        }
        
        // Add password validation listener
        document.addEventListener('DOMContentLoaded', function() {
            const passwordField = document.getElementById('passwordField');
            if (passwordField) {
                passwordField.addEventListener('input', function() {
                    const password = this.value;
                    const isValid = updatePasswordRequirements(password);
                    
                    // Update form validity to include password requirements
                    setTimeout(checkFormValidity, 100);
                });
            }
            
            addFormValidationListeners();
            checkFormValidity();
        });
    </script>

</body>
</html>