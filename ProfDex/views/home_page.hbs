<html>
<head>
    <link rel="stylesheet" href="home_page.css">
    <link rel="stylesheet" href="navbar.css">
</head>

<body>
    <!-- Toast Notification Container for Last Use Information -->
    <div class="toast-container" id="toastContainer"></div>
    
    <div class="homepage-container">
        <div class="filter-navbar-container">
            <div class="filter-navbar">
                <button type="button" class="filter-button active" id="latest">Latest</button>
                <button type="button" class="filter-button" id="alphaName">Alphabetical Name</button>
                <button type="button" class="filter-button" id="alphaCourse">Alphabetical Course</button>
            </div>
        </div>

        <div class="professor-thumbnail-container">
            <div class="professor-thumbnail">
                <div class="professor-links">
                    {{#each data}}
                        <div class="professor-card-container">
                            <a class="profDP" href='/reviewlist?id={{_id}}' style="background-image: url(images/teacher.jpg);">
                                <div class="hiddenDate" style="display:none;">1</div>
                                <div class="profTitle">Dr.</div>
                                <div class="profName">{{userId.lastName}}</div>
                            </a>
                            <a href="/viewprof?id={{_id}}" class="view-profile-link">View Profile</a>
                        </div>	
                    {{/each}}
                </div>
            </div>
        </div>

        <div id="navbar">
            <a class="mainpage" href="/">Profdex</a>
            <span class="navbar-buttons">
                <a class="menu" href="/editprofile">About Me</a>
            {{#if (ne userType 'professor')}}
            <a class="menu" href="/createpost">Create Review</a>
            {{/if}}
                <a class="menu" href="/help">Help</a>
            </span>
            <span class="search-buttons">
                {{#if loggedInUser}}
                    <a class="login-button" href="/logout">Logout</a>
                {{else}}
                    <a class="login-button" href="/login">Login</a>
                {{/if}}
                {{#if (or (eq userType 'manager') (eq userType 'administrator'))}}
                <a class="moderator-link" href="/moderator">Moderator</a>
                {{/if}}
                {{#if (eq userType 'administrator')}}
                <a class="admin-link" href="/admin">Admin</a>
                {{/if}}
                <form action="/viewprof" method="post">
                    <input type="text" class="search" id="search" name="search" placeholder="Professor Full Name">
                    <button type="submit" id="searchbutton"></button>
                </form>
            </span>
        </div>
    </div>

    <script>
        const professorThumbnailContainer = document.querySelector('.professor-thumbnail-container');
        const profDPElements = professorThumbnailContainer.querySelectorAll('.profDP');
        const profDPArray = Array.from(profDPElements);
        const professorThumbnail = document.querySelector('.professor-thumbnail');
        const professorLinks = document.querySelector('.professor-links');
        professorThumbnailContainer.appendChild(professorThumbnail);
        professorThumbnail.appendChild(professorLinks);
    
        var button = document.querySelectorAll(".filter-button");
    

        button.forEach(button => {
            button.addEventListener("click", function() {
                switch (button.id) {
                    case "alphaName":
                        arrangeSite(".profName");
                        break;
                    case "alphaCourse":
                        arrangeSite(".profCourse");
                        break;
                    case "latest":
                        arrangeSite(".hiddenDate");
                        break;
                    default:
                        alert("error");
                }
            });
        });

        var filterButtons = document.querySelectorAll('.filter-button');

        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                filterButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.toggle('active');
            });
        });


        function arrangeSite(itemTBA) {
            profDPArray.sort((a, b) => {
                const itemA = a.querySelector(itemTBA).textContent;
                const itemB = b.querySelector(itemTBA).textContent;
                return itemA.localeCompare(itemB);
            });

            profDPArray.forEach(element => {
                professorLinks.appendChild(element);
            });
        }
        
        
    </script>
    
    <script>
        // Toast Notification System for Last Use Information
        function showToast(message, type = 'info', duration = 5000) {
            const toastContainer = document.getElementById('toastContainer');
            
            // Create toast element
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            // Create toast content
            toast.innerHTML = `
                <div class="toast-header">
                    <div class="toast-title">Last Account Activity</div>
                    <button class="toast-close" onclick="this.parentElement.parentElement.remove()">&times;</button>
                </div>
                <div class="toast-message">${message}</div>
            `;
            
            // Add toast to container
            toastContainer.appendChild(toast);
            
            // Show toast with animation
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            // Auto-remove after specified duration
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.classList.remove('show');
                    setTimeout(() => {
                        if (toast.parentElement) {
                            toast.remove();
                        }
                    }, 300);
                }
            }, duration);
        }

        // Check if we should show last use notification
        function checkForLastUseNotification() {
            const urlParams = new URLSearchParams(window.location.search);
            const showLastUse = urlParams.get('show_last_use');
            
            if (showLastUse === 'true') {
                // Get last use info from server data
                {{#if lastUseInfo}}
                    const lastUseInfo = {
                        message: "{{lastUseInfo.message}}",
                        type: "{{lastUseInfo.lastUseType}}" === "unsuccessful" ? "warning" : "info"
                    };
                    showToast(lastUseInfo.message, lastUseInfo.type, 5000);
                {{else}}
                    showToast('Welcome back! Your account activity has been recorded.', 'info', 5000);
                {{/if}}
                
                // Clean up the URL parameter
                const newUrl = window.location.pathname;
                window.history.replaceState({}, document.title, newUrl);
            }
        }

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            checkForLastUseNotification();
        });
    </script>
</body>
</html>