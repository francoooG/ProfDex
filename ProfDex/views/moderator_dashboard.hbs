<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Moderator Dashboard - ProfDex</title>
    <link rel="stylesheet" href="/moderator_dashboard.css">
</head>
<body>
    <div class="moderator-container">
        <header class="moderator-header">
            <h1>Moderator Dashboard</h1>
            <div class="moderator-info">
                <span>Welcome, {{loggedInUser.firstName}} {{loggedInUser.lastName}}</span>
                <a href="/logout" class="logout-btn">Logout</a>
            </div>
        </header>
        
        <nav class="moderator-nav">
            <a href="/" class="nav-link">‚Üê Back to Main Site</a>
            <a href="/moderator" class="nav-link active">Dashboard</a>
            <a href="/moderator/users" class="nav-link">User Management</a>
        </nav>
        
        <main class="moderator-main">
            <div class="dashboard-grid">
                <div class="dashboard-card">
                    <h3>Role Assignment Overview</h3>
                    <div class="stats">
                        <div class="stat-item">
                            <span class="stat-number" id="student-count">0</span>
                            <span class="stat-label">Students</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number" id="professor-count">0</span>
                            <span class="stat-label">Professors</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number" id="unassigned-count">0</span>
                            <span class="stat-label">Unassigned</span>
                        </div>
                    </div>
                </div>
                
                <div class="dashboard-card">
                    <h3>Quick Actions</h3>
                    <div class="action-buttons">
                        <button class="action-btn" onclick="showUserManagement()">Manage Users</button>
                        <button class="action-btn" onclick="exportUserData()">Export Users</button>
                    </div>
                </div>
            </div>
            
            <div class="user-management-section">
                <h3>User Role Management</h3>
                <p class="section-description">
                    As a moderator, you can assign users as students or professors. 
                    You cannot assign administrator or moderator roles.
                </p>
                <div class="table-container">
                    <table class="user-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Current Role</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each users}}
                            <tr data-user-id="{{_id}}">
                                <td>{{firstName}} {{lastName}}</td>
                                <td>{{email}}</td>
                                <td>
                                    <select class="role-select" onchange="updateUserRole('{{_id}}', this.value)" {{#if (eq userType 'administrator')}}disabled{{/if}} {{#if (eq userType 'manager')}}disabled{{/if}}>
                                        <option value="student" {{#if (eq userType 'student')}}selected{{/if}}>Student</option>
                                        <option value="professor" {{#if (eq userType 'professor')}}selected{{/if}}>Professor</option>
                                        <option value="manager" {{#if (eq userType 'manager')}}selected{{/if}} disabled>Moderator</option>
                                        <option value="administrator" {{#if (eq userType 'administrator')}}selected{{/if}} disabled>Administrator</option>
                                    </select>
                                </td>
                                <td>
                                    <span class="role-note">
                                        {{#if (eq userType 'administrator')}}Admin - Cannot Modify{{/if}}
                                        {{#if (eq userType 'manager')}}Moderator - Cannot Modify{{/if}}
                                        {{#if (or (eq userType 'student') (eq userType 'professor'))}}Role can be changed{{/if}}
                                    </span>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>
    
    <!-- Hidden element to store users data for JavaScript -->
    <div id="users-data" data-users="{{#if users}}{{JSON.stringify users}}{{else}}[]{{/if}}" style="display: none;"></div>
    
    <script>
        // Global users data from server
        const usersData = JSON.parse(document.getElementById('users-data').getAttribute('data-users') || '[]');
        
        // Calculate and display statistics
        function updateStatistics() {
            const users = usersData || [];
            let studentCount = 0;
            let professorCount = 0;
            let unassignedCount = 0;
            
            users.forEach(user => {
                if (user.userType === 'student') studentCount++;
                else if (user.userType === 'professor') professorCount++;
                else if (user.userType === 'manager' || user.userType === 'administrator') unassignedCount++;
            });
            
            document.getElementById('student-count').textContent = studentCount;
            document.getElementById('professor-count').textContent = professorCount;
            document.getElementById('unassigned-count').textContent = unassignedCount;
        }
        
        // Initialize statistics when page loads
        document.addEventListener('DOMContentLoaded', updateStatistics);
        
        function updateUserRole(userId, newRole) {
            if (confirm(`Are you sure you want to change this user's role to ${newRole}?`)) {
                fetch('/moderator/update-role', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ userId, newRole })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('User role updated successfully!');
                        location.reload();
                    } else {
                        alert('Error updating user role: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating user role');
                });
            }
        }
        
        function showUserManagement() {
            document.querySelector('.user-management-section').scrollIntoView({ behavior: 'smooth' });
        }
        
        function exportUserData() {
            const users = usersData || [];
            const csvContent = "data:text/csv;charset=utf-8," 
                + "Name,Email,Role\n"
                + users.map(user => `${user.firstName} ${user.lastName},${user.email},${user.userType}`).join("\n");
            
            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "users_export.csv");
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
</body>
</html> 